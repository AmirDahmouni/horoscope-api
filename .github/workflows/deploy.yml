name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Trigger on push to master branch
  pull_request:

jobs:
  build-and-push-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
      # Checkout repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      # Install dependencies and run tests
      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker image
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/horoscope-api:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/horoscope-api:${{ github.sha }}

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-push-docker  # assuming build-and-push-docker job pushes the image to Docker Hub

    steps:
      # Checkout repository code
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # Pull Docker image from Docker Hub
      - name: Pull Docker Image from Docker Hub
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/horoscope-api:${{ github.sha }}

      # Deploy to Render using API
      - name: Deploy to Render using API
        run: |
          curl -X POST https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploy \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "dockerImage": "${{ secrets.DOCKER_USERNAME }}/horoscope-api:${{ github.sha }}",
              "dockerImageVersion": "${{ github.sha }}",
              "env": {
                "DOCKER_USERNAME": "${{ secrets.DOCKER_USERNAME }}",
                "DOCKER_PASSWORD": "${{ secrets.DOCKER_PASSWORD }}"
              }
            }'



